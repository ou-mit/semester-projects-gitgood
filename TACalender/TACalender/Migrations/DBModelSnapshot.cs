// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TACalender;

#nullable disable

namespace TACalender.Migrations
{
    [DbContext(typeof(DB))]
    partial class DBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("TACalender.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseNo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumSections")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Subject")
                        .HasColumnType("INTEGER");

                    b.HasKey("CourseID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("TACalender.Educator", b =>
                {
                    b.Property<int>("EduID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumSection")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OUEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PersonalEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PrefName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EduID");

                    b.ToTable("Educators");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Educator");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TACalender.Section", b =>
                {
                    b.Property<int>("SectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EduID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumTas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SectionNo")
                        .HasColumnType("INTEGER");

                    b.HasKey("SectionID");

                    b.HasIndex("CourseID");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("TACalender.SectionTA", b =>
                {
                    b.Property<int>("SecTAID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("SectionID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TAID")
                        .HasColumnType("INTEGER");

                    b.HasKey("SecTAID");

                    b.HasIndex("SectionID");

                    b.HasIndex("TAID");

                    b.ToTable("SectionTAs");
                });

            modelBuilder.Entity("TACalender.Instructor", b =>
                {
                    b.HasBaseType("TACalender.Educator");

                    b.HasDiscriminator().HasValue("Instructor");
                });

            modelBuilder.Entity("TACalender.TA", b =>
                {
                    b.HasBaseType("TACalender.Educator");

                    b.HasDiscriminator().HasValue("TA");
                });

            modelBuilder.Entity("TACalender.Section", b =>
                {
                    b.HasOne("TACalender.Course", null)
                        .WithMany("Sections")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TACalender.SectionTA", b =>
                {
                    b.HasOne("TACalender.Section", null)
                        .WithMany("SectionTAList")
                        .HasForeignKey("SectionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TACalender.TA", null)
                        .WithMany("SectionTAList")
                        .HasForeignKey("TAID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TACalender.Course", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("TACalender.Section", b =>
                {
                    b.Navigation("SectionTAList");
                });

            modelBuilder.Entity("TACalender.TA", b =>
                {
                    b.Navigation("SectionTAList");
                });
#pragma warning restore 612, 618
        }
    }
}
